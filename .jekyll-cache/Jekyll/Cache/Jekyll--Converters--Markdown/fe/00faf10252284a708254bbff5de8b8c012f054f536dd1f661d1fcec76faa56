I"!.<h1 id="java-fx---transformacions">Java FX - Transformacions</h1>

<p>La transformació es pot definir com el canvi de forma, naturalesa o aparença dels gràfics. En JavaFX, el paquet anomenat javafx.scene.transform representa totes les transformacions.</p>

<p>Conté les classes per a diversos tipus de transformacions que es donen en la taula. La classe denominada javafx.scene.transform.Transform és la classe pare per a totes les classes de transformació.</p>

<ol>
  <li>Translation: Lsa translació s’utilitza per a canviar la posició del node. La classe javafx.scene.transform.Translate representa la translació.</li>
  <li>Rotation: La rotació s’utilitza per a girar l’objecte des del seu origen en un cert angle. La classe javafx.scene.transform.Rotate representa la rotació.</li>
  <li>Scaling: L’escala s’utilitza per a modificar la grandària del node. La classe javafx.scene.transform.Scale representa l’escalament.</li>
  <li>Shearing: El retallar s’utilitza per a alterar el pendent de l’objecte en una direcció particular. La classe javafx.scene.transform.Shear representa Shearing.</li>
</ol>

<h3 id="passos-per-a-aplicar-la-transformació-en-el-node">Passos per a aplicar la transformació en el node</h3>

<p>En JavaFX, aplicar la transformació a un node és bastant fàcil. Només necessitem seguir els passos que es detallen a continuació per a aplicar la transformació.</p>

<ul>
  <li>Crea una instància de la classe respectiva. Per exemple; per a crear l’escala 2D, utilitzem:</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Scale scale = new Scale();
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>on scale és l'objecte de la classe Scale.
</code></pre></div></div>

<ul>
  <li>Estableix les propietats adequades de l’objecte de classe d’escala. Per exemple, per a establir les propietats de l’objecte d’escala, use els mètodes d’establiment com els següents:</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>scale.setX(&lt;double value); 
scale.setY(&lt;double value); 
scale.setPivotX(&lt;double value); 
scale.setPivotY(&lt;double value); 
</code></pre></div></div>

<ul>
  <li>Aplica la transformació al node respectiu. Utilitza la següent sintaxi per aquest propósit.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;node-object&gt;.getTransforms().add(&lt;Transform-object&gt;)
</code></pre></div></div>

<h2 id="translation">Translation</h2>

<p>La translació es pot definir com un canvi en la posició d’un objecte en la pantalla. La posició d’un objecte canvia movent-lo al llarg de la direcció X-Y. En JavaFX, la classe javafx.scene.transform.Translate representa la transformació Translate. Necessitem crear una instància d’aquesta classe per a poder traduir l’objecte.</p>

<p>La següent imatge trasllada el cercle d’una posició a una altra. La coordenada central del cercle P (x, i) es converteix en P (x1, y1). La coordenada X es canvia pel factor Tx mentre que la coordenada I es canvia pel factor Ty.</p>

<p><img src="./images/translatino.png" alt="translation" /></p>

<ul>
  <li>
    <p>Propietats</p>

    <ul>
      <li><strong>setX(double value)</strong>: És una propietat de tipus doble. Representa la distància a la qual es trasllada l’objecte en direcció X.</li>
      <li><strong>setY(double value)</strong> És una propietat de tipus doble. Representa la distància per la qual l’objecte es trasllada en la direcció Y.</li>
      <li><strong>setZ(double value)</strong> És una propietat de tipus doble. Representa la distància per la qual l’objecte es trasllada en la direcció Z.</li>
    </ul>
  </li>
  <li>
    <p>Constructors</p>

    <ul>
      <li>Translate(): crea la nova instància de la classe Translate amb els paràmetres predeterminats.</li>
      <li>Translate(double X, double Y): crea la nova instància amb la coordenada especificada (X, Y).</li>
      <li>Translate(double X, double Y, double Z)e: crea la nova instància amb la coordenada especificada (x, y, z).</li>
    </ul>
  </li>
</ul>

<h2 id="rotation">Rotation</h2>

<p>La rotació es pot definir com el procés de girar un objecte en un cert angle θ (theta). En JavaFX, la classe javafx.scene.transform.Rotate representa la transformació de rotació.</p>

<p>La imatge il·lustra la transformació de rotació. el rectangle que es mostra en la imatge es gira al llarg de l’eix Y en l’angle θ. Les coordenades del rectangle es canvien a causa de la rotació, mentre que les vores romanen de la mateixa longitud.</p>

<p><img src="./images/rotation.png" alt="rotation" /></p>

<ul>
  <li>
    <p>Propietats</p>

    <ul>
      <li><strong>setAngle(double value)</strong>: És una propietat de tipus doble. Representa l’angle de rotació en graus.</li>
      <li><strong>setAxis(Point3D value)</strong>: És una propietat de tipus d’objecte. Representa l’eix de rotació.</li>
      <li><strong>setPivotX(double value)</strong>: És una propietat de tipus doble. Representa la coordenada X del punt de pivot de rotació.</li>
      <li><strong>setPivotY(double value)</strong>: És una propietat de tipus doble. Representa la coordenada Y del punt de pivot de rotació.</li>
      <li><strong>setPivotZ(double value)</strong>: És una propietat de tipus doble. Representa la coordenada Z del punt de pivot de rotació.</li>
    </ul>
  </li>
  <li>
    <p>Constructors</p>
  </li>
</ul>

<p>Rotate(): crea la transformació de rotació amb els paràmetres predeterminats.
    - <strong>Rotate(double angle)</strong>: crea la transformació de rotació amb l’angle especificat mesurat en graus. Els punts de pivot s’estableixen en (0,0).
    - <strong>Rotate(double angle, double pivotX)</strong>: crea la transformació de rotació 3D amb la transformació especificada. Els punts de pivot s’estableixen en (0,0,0).
    - <strong>Rotate(double angle, double pivotX, double pivotY)</strong>: crea la transformació de rotació amb l’angle especificat i la coordenada de pivot (x, y).
    - <strong>Rotate(double angle, double pivotX, double pivotY, double pivotZ)</strong>: crea la transformació de rotació amb l’angle especificat i la coordenada de pivot 3D (x, y, z).
    - <strong>Rotate(double angle, double pivotX, double pivotY, double pivotZ,Point3D Axis)</strong>: crea una transformació de rotació 3D amb l’angle especificat i la coordenada de pivot (x, y, z).</p>

<h2 id="escalament">Escalament</h2>

<p>L’escala és un tipus de transformació que s’utilitza per a canviar la grandària de l’objecte. Pot expandir la grandària o comprimir la grandària de l’objecte. La grandària es pot modificar multiplicant les coordenades de l’objecte per un factor que es diu factor d’escala. En JavaFX, la classe javafx.scene.transform.Scale representa la transformació d’escala.</p>

<p>En la següent imatge, la transformació d’escala s’aplica al poal per a gastar la seua grandària.</p>

<p><img src="./images/ecaling.png" alt="scaling" /></p>

<ul>
  <li>
    <p>Propietats</p>

    <ul>
      <li><strong>setPivotX(double value)</strong>: És una propietat de tipus doble. Representa la coordenada x del punt de pivot al voltant del qual es realitza l’escala.</li>
      <li><strong>setPivotY(double value)</strong>: És una propietat de tipus doble. Representa la coordenada y del punt de pivot al voltant del qual es realitza l’escala.</li>
      <li><strong>setPivotZ(double value)</strong>: És una propietat de tipus doble. Representa la coordenada z del punt de pivot al voltant del qual es realitza l’escala.</li>
      <li>
        <p><strong>setX(double value)</strong>: És una propietat de tipus doble. Representa el factor pel qual s’escala l’objecte al llarg de l’eix X.</p>
      </li>
      <li>
        <p><strong>setY(double value)</strong>: És una propietat de tipus doble. Representa el factor pel qual l’objecte s’escala al llarg de l’eix Y.</p>
      </li>
      <li><strong>setZ(double value)</strong>: És una propietat de tipus doble. Representa el factor pel qual s’escala l’objecte al llarg de l’eix Z.</li>
    </ul>
  </li>
  <li>
    <p>Constructors</p>

    <ul>
      <li><strong>Scale()</strong>: crea la nova instància amb els paràmetres predeterminats.</li>
      <li><strong>Scale(double X, double Y)</strong>: crea la nova instància d’Escala 2D.</li>
      <li><strong>Scale(double X, double Y, double Z)</strong>: crea la nova instància d’escala 3D.</li>
      <li><strong>Scale(double X, double Y, double Z, double pivotX, double pivotY)</strong>: crea la nova instància de l’escala 2D amb les coordenades de pivot especificades.</li>
      <li><strong>Scale(double X, double Y, double Z, double pivotX, double pivotY, double pivotZ)</strong>: crea la nova instància de l’Escala 3D amb les coordenades de pivot especificades.</li>
    </ul>
  </li>
</ul>

<h2 id="shearing">Shearing</h2>

<p>El cisallament és un tipus de transformació que canvia el pendent de l’objecte respecte a qualsevol dels eixos. Hi ha dues transformacions de tall que són tall en X i tall en Y. La transformació de tall X canvia els valors de la coordenada X mentre que el tall Y canvia els valors de la coordenada Y.</p>

<p>En tots dos tipus de tall, només una coordenada canvia el valor mentre que l’altra roman igual. La següent imatge mostra l’objecte després d’aplicar-li la transformació X-shear. La coordenada i del rectangle roman sense canvis mentre que la coordenada X canvia en algun factor.</p>

<p>En JavaFX, la classe javafx.scene.transform.Shear representa la transformació Shear.</p>

<p><img src="./images/shearing.png" alt="Shearing" /></p>

<ul>
  <li>
    <p>Propietats</p>

    <ul>
      <li><strong>setPivotX(double value)</strong>: És una propietat de tipus doble. Representa la coordenada X del punt de pivot de tall.</li>
      <li><strong>setPivotY(double value)</strong>: És una propietat de tipus doble. Representa la coordenada Y del punt de pivot de tall.</li>
      <li><strong>setX(double value)</strong>: És una propietat de tipus doble. Representa el multiplicador pel qual les coordenades es desvien en la direcció X positiva com el factor de la seua coordenada Y.</li>
      <li><strong>setY(double value)</strong>: És una propietat de tipus doble. Representa el multiplicador pel qual les coordenades es desvien en la direcció Y positiva com el factor de la seua coordenada X.</li>
    </ul>
  </li>
  <li>
    <p>Constructors</p>

    <ul>
      <li><strong>Shear()</strong>: crea una nova instància de Shear amb els paràmetres predeterminats.</li>
      <li><strong>Shear(double x, double y)</strong>: crea una nova instància amb les coordenades de desplaçament especificades. Les coordenades de pivot s’estableixen en (0,0).</li>
      <li><strong>Shear(double x, double y, double pivotX, double pivotY)</strong>: crea una nova instància amb les coordenades de desplaçament i les coordenades de pivot especificades.</li>
    </ul>
  </li>
</ul>

<h2 id="transformació-múltiple">Transformació múltiple</h2>

<p>Podem fer ús de l’efecte combinat de totes les transformacions en un node. Per a aquest propòsit, JavaFX proporciona el mètode addAll (Transform obj1, Transform obj2 ….) que es pot cridar de manera anònima en la referència retornada pel mètode <node-obj> .getTransforms ().</node-obj></p>

<p>El següent exemple implementa totes les transformacions en un rectangle.</p>

<p><a href="../../javafx.html">back</a></p>
:ET