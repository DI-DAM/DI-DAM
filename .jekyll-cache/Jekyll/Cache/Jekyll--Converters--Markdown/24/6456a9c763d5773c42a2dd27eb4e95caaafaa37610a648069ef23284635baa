I"Û<h1 id="controls---button">Controls - Button</h1>

<p>Permet als desenvolupadors processar una acci√≥ quan un usuari fa clic en un bot√≥. La classe Button √©s una extensi√≥ de la classe Etiquetada. Pot mostrar text, una imatge o tots dos.</p>

<p><img src="./images/button1.png" alt="button1" /></p>

<p>Button es un node, per lo que hereda tots els m√©todes d‚Äôutilitzaci√≥ d‚Äôevents de la classe node.</p>

<h2 id="bot√≥-amb-imatge">bot√≥ amb imatge:</h2>

<p>Es crea igual que un bot√≥ normal, pero se li afegeix una imatge.</p>

<p><img src="./images/button1.png" alt="button2" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ImageView imageView = new ImageView(new Image("icons/icon.png"));
Button button = new Button("Bot√≥ amb text i imatge", imageView);
        
//button2.setGraphic(imageView); &lt;- una opci√≥ alternativa
</code></pre></div></div>

<h2 id="bot√≥-i-events">bot√≥ i events.</h2>

<p>El bot√≥, al igual que altres nodes disposa de diferents m√©todes amb els quals pot interactuar l‚Äôusuari amb ell.Si volem veure els m√©todes m√©s utilitzats es poden veure en el men√∫ code del scene builder. Per veure-ho amb m√©s detall, fes clic <a href="https://openjfx.io/javadoc/14/javafx.controls/javafx/scene/control/ButtonBase.html">ac√≠</a></p>

<p>En el seg√ºent exemple, anem a indicar-li que quan detecta que ha fet click en el bot√≥, escriu un text en consola:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>button.setOnAction(actionEvent -&gt; {
            System.out.println("has clicat...");
        });
</code></pre></div></div>

<h2 id="efectes">Efectes</h2>

<p>Com la clase button s‚Äôexten de la classe node, pots aplicar els efectes del paquet javafx.scene.effect per modificar l‚Äôapariencia del bot√≥.</p>

<p>En el seg√ºent exemple, quan pasem el ratol√≠ per damunt del bot√≥, li posar√° una ombra.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>button.setOnMouseEntered(dragEvent -&gt; {
	button.setEffect(shadow);
});
button.setOnMouseExited(mouseEvent -&gt; {
        button.setEffect(null);
});
</code></pre></div></div>

<p><a href="../../javafx.html">back</a></p>

:ET