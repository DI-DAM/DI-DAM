I"á<h1 id="imageview">ImageView</h1>

<p>JavaFX li permet treballar amb tots els formats dâ€™imatge populars. Usem la classe javafx.scene.image.Image per a carregar imatges des del disc dur o una font dâ€™imatge de xarxa. Per a mostrar imatges en JavaFX, utilitzem la classe ImageView.</p>

<p>Els constructors de la classe <strong>Image</strong> tâ€™ajuden a carregar dades dâ€™imatge:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Image(InputStream inputStream)
 
Image(InputStream is, double requestedWidth, double requestedHeight, boolean preserveRatio, boolean smooth)
 
Image(String url)
 
Image(String url, boolean backgroundLoading)
 
Image(String url, double requestedWidth, double requestedHeight, boolean preserveRatio, boolean smooth)
 
Image(String url, double requestedWidth, double requestedHeight, boolean preserveRatio, boolean smooth, boolean backgroundLoading)
</code></pre></div></div>

<p>Si volem carregar imatges des de URL:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>String url = "http://somedomain/images/image.png";
 
boolean backgroundLoading = true;
 
// L''imatge estÃ  sent carregada en el background
Image image = new Image(url, backgroundLoading);
</code></pre></div></div>

<p>PerÃ² el mÃ©s comÃº es que carregues una imatge en el disc dur.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>// Un fitxer d'imatge en el disc dur.
File file = new File("C:/MyImages/myphoto.jpg");
 
// --&gt; file:/C:/MyImages/myphoto.jpg
String localUrl = file.toURI().toURL().toString();
 
Image image = new Image(localUrl);
</code></pre></div></div>

<p>ImageView Ã©s un component que lâ€™ajuda a mostrar imatges en JavaFX. TambÃ© pot aplicar efectes per a mostrar imatges com girar, acostar i allunyar, â€¦</p>

<p><img src="./images/imageView1.gif" alt="image View" /></p>

<p><a href="../../javafx.html">back</a></p>

:ET